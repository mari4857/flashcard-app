{"version":3,"sources":["Layout/Header.js","utils/api/index.js","Layout/Decks.js","Layout/Home.js","Layout/DeckForm.js","Layout/DeckCreate.js","Layout/Study.js","Layout/DeckEdit.js","Layout/CardForm.js","Layout/CardEdit.js","Layout/Deck.js","Layout/CardCreate.js","Layout/NotFound.js","Layout/index.js","App.js","index.js"],"names":["Header","className","API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","a","fetch","response","status","Error","statusText","json","name","listDecks","signal","createDeck","method","body","JSON","stringify","readDeck","deckId","updateDeck","updatedDeck","id","deleteDeck","listCards","createCard","card","Number","readCard","cardId","updateCard","updatedCard","deleteCard","append","Decks","useState","decks","setDecks","useEffect","abortController","AbortController","console","log","loadDecks","abort","handleDelete","target","value","window","confirm","deleteData","length","map","style","marginBottom","description","to","marginRight","paddingRight","onClick","Home","DeckForm","formData","handleChange","type","placeholder","onChange","rows","DeckCreate","setFormData","history","useHistory","aria-label","aria-current","onSubmit","event","output","push","preventDefault","updateData","Study","useParams","front","setFront","cardNumber","setCardNumber","setCards","setDeck","loadData","Breadcrumb","back","DeckEdit","CardForm","width","CardEdit","params","setCard","responseDeck","responseCard","Deck","handleDeckDelete","handleCardDelete","CardCreate","initialFormState","NotFound","Layout","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84904f97.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options) {\n  try {\n    const response = await fetch(url, options);\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      throw error;\n    }\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all cards associated with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to a possible empty array of cards.\n */\nexport async function listCards(deckId, signal) {\n  const url = `${API_BASE_URL}/cards?deckId=${deckId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { listDecks, deleteDeck } from \"../utils/api/index\";\n\nfunction Decks() {\n  const [decks, setDecks] = useState([]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadDecks() {\n      try {\n        const response = await listDecks(abortController.signal);\n        setDecks(response);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"loadDecks Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    loadDecks();\n    return () => abortController.abort();\n  }, []);\n\n  const handleDelete = async ({ target }) => {\n    const value = target.value;\n    const result = window.confirm(\n      `Delete deck ID ${value}? You will not be able to recover it.`\n    );\n\n    if (result) {\n      async function deleteData() {\n        try {\n          await deleteDeck(value);\n          const response = await listDecks();\n          setDecks(response);\n        } catch (error) {\n          if (error.name === \"AbortError\") {\n            console.log(\"deleteData Aborted\");\n          } else {\n            throw error;\n          }\n        }\n      }\n      deleteData();\n    }\n  };\n\n  if (decks.length > 0) {\n    return (\n      <div>\n        {decks.map((deck) => (\n          <div key={deck.id} className=\"card\" style={{ marginBottom: \"10px\" }}>\n            <div className=\"container\">\n              <div className=\"row card-header align-items-center\">\n                <div className=\"col-10\">\n                  <h4 className=\"mb-0\">{deck.name}</h4>\n                </div>\n                <div className=\"col-2 text-right\">\n                  <p className=\"mb-0\"> {deck.cards.length} cards</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <p className=\"card-text\">{deck.description}</p>\n              <div className=\"container\">\n                <div className=\"row justify-content-between\">\n                  <div className=\"col-4\">\n                    <Link\n                      to={`decks/${deck.id}`}\n                      className=\"btn btn-secondary\"\n                      style={{ marginRight: \"10px\" }}\n                    >\n                      <i\n                        className=\"oi oi-eye\"\n                        style={{ paddingRight: \"5px\" }}\n                      ></i>\n                      View\n                    </Link>\n                    <Link\n                      to={`decks/${deck.id}/study`}\n                      className=\"btn btn-primary\"\n                    >\n                      <i\n                        className=\"oi oi-book\"\n                        style={{ paddingRight: \"5px\" }}\n                      ></i>\n                      Study\n                    </Link>\n                  </div>\n                  <div className=\"col-1\">\n                    <button\n                      className=\"btn btn-danger\"\n                      value={deck.id}\n                      onClick={handleDelete}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n  return \"Please add a deck.\";\n}\n\nexport default Decks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Decks from \"./Decks\";\n\nfunction Home() {\n  return (\n    <div>\n      <Link\n        to=\"/decks/new\"\n        className=\"btn btn-secondary\"\n        style={{ marginBottom: \"10px\" }}\n      >\n        <i className=\"oi oi-plus\" style={{ paddingRight: \"5px\" }}></i>\n        Create Deck\n      </Link>\n      <Decks />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\n\nconst DeckForm = ({ formData, handleChange }) => {\n  return (\n    <div>\n      <label>Name:</label>\n      <input\n        id=\"name\"\n        type=\"text\"\n        name=\"name\"\n        className=\"w-100 mb-3 p-2\"\n        placeholder=\"Deck Name\"\n        onChange={handleChange}\n        value={formData.name}\n      />\n      <label>Description:</label>\n      <textarea\n        id=\"description\"\n        type=\"textarea\"\n        name=\"description\"\n        rows=\"3\"\n        className=\"w-100 mb-3 p-2\"\n        placeholder=\"Brief description of the deck\"\n        onChange={handleChange}\n        value={formData.description}\n      />\n    </div>\n  );\n};\nexport default DeckForm;\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport DeckForm from \"./DeckForm\";\nimport { createDeck } from \"../utils/api/index\";\n\nfunction DeckCreate() {\n  const initialFormState = {\n    name: \"\",\n    description: \"\",\n  };\n  const [formData, setFormData] = useState({ ...initialFormState });\n  const handleChange = ({ target }) => {\n    const value = target.value;\n    setFormData({\n      ...formData,\n      [target.name]: value,\n    });\n  };\n\n  const history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log(\"Submitted:\", formData);\n    async function updateData() {\n      try {\n        const output = await createDeck(formData);\n        history.push(`/decks/${output.id}`);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    updateData();\n  };\n\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">\n              <i className=\"oi oi-home\" style={{ paddingRight: \"5px\" }}></i>\n              Home\n            </Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            Create Deck\n          </li>\n        </ol>\n      </nav>\n      <br />\n      <h2>Create Deck</h2>\n      <form onSubmit={handleSubmit}>\n        <DeckForm formData={formData} handleChange={handleChange} />\n        <Link\n          to=\"/\"\n          className=\"btn btn-secondary\"\n          style={{ marginRight: \"10px\" }}\n        >\n          Cancel\n        </Link>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default DeckCreate;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\n\nfunction Study() {\n  const params = useParams();\n  const deckId = params.deckId;\n  const [front, setFront] = useState(true);\n  const [cardNumber, setCardNumber] = useState(0);\n  const [cards, setCards] = useState({});\n  const [deck, setDeck] = useState({});\n\n  useEffect(() => {\n    setCards({});\n    async function loadData() {\n      try {\n        const response = await readDeck(deckId);\n        setDeck(response);\n        setCards(response.cards);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    loadData();\n  }, [deckId]);\n\n  function flipCard() {\n    setFront(!front);\n  }\n\n  function nextCard() {\n    if (cardNumber + 1 < cards.length) {\n      setCardNumber(cardNumber + 1);\n      setFront(true);\n    } else {\n      const result = window.confirm(`Restart cards?\n        \n        Click 'cancel' to return to the home page.`);\n      if (result) {\n        setCardNumber(0);\n        setFront(true);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  }\n\n  const history = useHistory();\n\n  function Breadcrumb() {\n    return (\n      <div className=\"navigation\">\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <Link to=\"/\">\n                <i className=\"oi oi-home\" style={{ paddingRight: \"5px\" }}></i>\n                Home\n              </Link>\n            </li>\n            <li className=\"breadcrumb-item\">\n              <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Study\n            </li>\n          </ol>\n        </nav>\n      </div>\n    );\n  }\n\n  if (cards.length > 2) {\n    // console.log(cards[0].front);\n    return (\n      <div>\n        <Breadcrumb />\n        <h2>Study: {deck.name}</h2>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">\n              Card {cardNumber + 1} of {cards.length}\n            </h5>\n            <p className=\"card-text\">\n              {front\n                ? `${cards[cardNumber].front}`\n                : `${cards[cardNumber].back}`}\n            </p>\n            <button className=\"btn btn-secondary\" onClick={flipCard}>\n              Flip\n            </button>{\" \"}\n            &nbsp;\n            {front ? (\n              \" \"\n            ) : (\n              <button className=\"btn btn-primary\" onClick={nextCard}>\n                Next\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <Breadcrumb />\n        <h2>Study: {deck.name}</h2>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">Not Enough Cards.</h5>\n            <p className=\"card-text\">\n              You need at least 3 cards to study. There are {cards.length} cards\n              in this deck.\n            </p>\n            <Link to={`/decks/${deckId}/cards/new`} className=\"btn btn-primary\">\n              Add Cards\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Study;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport DeckForm from \"./DeckForm\";\nimport { readDeck, updateDeck } from \"../utils/api/index\";\n\nfunction DeckEdit() {\n  const initialFormState = {\n    name: \"\",\n    description: \"\",\n  };\n  const [deck, setDeck] = useState({ ...initialFormState });\n  const params = useParams();\n  const deckId = params.deckId;\n\n  useEffect(() => {\n    async function loadData() {\n      try {\n        const response = await readDeck(deckId);\n        setDeck(response);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    loadData();\n  }, [deckId]);\n\n  const handleChange = ({ target }) => {\n    const value = target.value;\n    setDeck({\n      ...deck,\n      [target.name]: value,\n    });\n  };\n\n  const history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    //console.log(\"Submitted:\", deck);\n    async function updateData() {\n      try {\n        await updateDeck(deck);\n        history.push(`/decks/${deckId}`);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    updateData();\n  };\n\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">\n              <i className=\"oi oi-home\" style={{ paddingRight: \"5px\" }}></i>\n              Home\n            </Link>\n          </li>\n          <li className=\"breadcrumb-item\">\n            <Link to={`/decks/${deckId}`}>Deck Name</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            Edit Deck\n          </li>\n        </ol>\n      </nav>\n      <h2>Edit Deck</h2>\n      <form onSubmit={handleSubmit}>\n        <DeckForm formData={deck} handleChange={handleChange} />\n        <Link\n          to={`/decks/${deckId}`}\n          className=\"btn btn-secondary\"\n          style={{ marginRight: \"10px\" }}\n        >\n          Cancel\n        </Link>\n        <button type=\"submit\" value=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default DeckEdit;\n","import React from \"react\";\n\nconst CardForm = ({ formData, handleChange }) => {\n  return (\n    <div>\n      <label>Front:</label>\n      <textarea\n        id=\"front\"\n        type=\"text\"\n        name=\"front\"\n        rows=\"3\"\n        className=\"w-100 mb-3 p-2\"\n        onChange={handleChange}\n        value={formData.front}\n      />\n      <label>Back:</label> <br />\n      <textarea\n        id=\"back\"\n        type=\"textarea\"\n        name=\"back\"\n        rows=\"3\"\n        className=\"w-100 mb-3 p-2\"\n        onChange={handleChange}\n        value={formData.back}\n        style={{ width: \"100%\" }}\n      />\n    </div>\n  );\n};\nexport default CardForm;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport CardForm from \"./CardForm\";\nimport { readDeck, readCard, updateCard } from \"../utils/api/index\";\n\nfunction CardEdit() {\n  const params = useParams();\n  const deckId = params.deckId;\n  const cardId = params.cardId;\n  const [deck, setDeck] = useState({});\n  const [card, setCard] = useState({});\n\n  useEffect(() => {\n    setDeck({});\n    async function loadData() {\n      try {\n        const responseDeck = await readDeck(deckId);\n        setDeck(responseDeck);\n        const responseCard = await readCard(cardId);\n        setCard(responseCard);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    loadData();\n  }, [deckId, cardId]);\n\n  const handleChange = ({ target }) => {\n    const value = target.value;\n    setCard({\n      ...card,\n      [target.name]: value,\n    });\n  };\n\n  const history = useHistory();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log(\"Submitted:\", card);\n    async function updateData() {\n      try {\n        const response = await updateCard(card);\n        console.log(response);\n        history.push(`/decks/${deckId}`);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    updateData();\n  };\n\n  return (\n    <div>\n      <nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb\">\n          <li className=\"breadcrumb-item\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li className=\"breadcrumb-item\">\n            <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n          </li>\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\n            Edit Card {cardId}\n          </li>\n        </ol>\n      </nav>\n      <br />\n\n      <h2>Edit Card</h2>\n\n      <form onSubmit={handleSubmit}>\n        <CardForm formData={card} handleChange={handleChange} />\n        <Link\n          to={`/decks/${deckId}`}\n          className=\"btn btn-secondary\"\n          style={{ marginRight: \"10px\" }}\n        >\n          Cancel\n        </Link>\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Save\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default CardEdit;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport {\n  readDeck,\n  deleteDeck,\n  deleteCard,\n  listCards,\n} from \"../utils/api/index\";\n\nfunction Deck() {\n  const [deck, setDeck] = useState({});\n  const [cards, setCards] = useState({});\n  const params = useParams();\n  const deckId = params.deckId;\n\n  useEffect(() => {\n    setCards({});\n    async function loadData() {\n      try {\n        const response = await readDeck(deckId);\n        // console.log(response);\n        setDeck(response);\n        setCards(response.cards);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          console.log(\"Aborted\");\n        } else {\n          throw error;\n        }\n      }\n    }\n    loadData();\n  }, [deckId]);\n\n  const history = useHistory();\n\n  const handleDeckDelete = async () => {\n    const result = window.confirm(\n      `Delete deck ID ${deckId}? You will not be able to recover it.`\n    );\n    if (result) {\n      async function deleteData() {\n        try {\n          await deleteDeck(deckId);\n          history.push(\"/\");\n        } catch (error) {\n          if (error.name === \"AbortError\") {\n            console.log(\"Aborted\");\n          } else {\n            throw error;\n          }\n        }\n      }\n      deleteData();\n    }\n  };\n\n  const handleCardDelete = async ({ target }) => {\n    const value = target.value;\n\n    const result = window.confirm(\n      `Delete card ID ${value}? You will not be able to recover it.`\n    );\n    if (result) {\n      async function deleteData() {\n        try {\n          await deleteCard(value);\n          const response = await listCards(deckId);\n          // console.log(deckId, response);\n          setCards(response);\n        } catch (error) {\n          if (error.name === \"AbortError\") {\n            console.log(\"Aborted\");\n          } else {\n            throw error;\n          }\n        }\n      }\n      deleteData();\n    }\n  };\n\n  if (cards.length > 0) {\n    return (\n      <div>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\" key=\"0\">\n              <Link to=\"/\">\n                <i className=\"oi oi-home\" style={{ paddingRight: \"5px\" }}></i>\n                Home\n              </Link>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\" key=\"1\">\n              {deck.name}\n            </li>\n          </ol>\n        </nav>\n        <h3>{deck.name}</h3>\n        <p>{deck.description}</p>\n        <div className=\"row justify-content-between\">\n          <div className=\"col-8\">\n            <Link to={`/decks/${deckId}/edit`} className=\"btn btn-secondary\">\n              <i className=\"oi oi-pencil\" style={{ paddingRight: \"5px\" }}></i>\n              Edit\n            </Link>{\" \"}\n            &nbsp;\n            <Link to={`/decks/${deckId}/study`} className=\"btn btn-primary\">\n              <i className=\"oi oi-book\" style={{ paddingRight: \"5px\" }}></i>\n              Study\n            </Link>{\" \"}\n            &nbsp;\n            <Link to={`/decks/${deckId}/cards/new`} className=\"btn btn-primary\">\n              <i className=\"oi oi-plus\" style={{ paddingRight: \"5px\" }}></i>\n              Add Cards\n            </Link>\n          </div>\n          <div className=\"col-2\">\n            <button onClick={handleDeckDelete} className=\"btn btn-danger\">\n              <i className=\"oi oi-trash\" style={{ paddingRight: \"5px\" }}></i>\n              Delete\n            </button>\n          </div>\n        </div>\n        <br />\n        <h2>Cards</h2>\n        <br />\n        {cards.map((card) => (\n          <div key={card.id} className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"container\">\n                <div className=\"row justify-content-start mb-3\">\n                  <div className=\"col-6\">{card.front}</div>\n                  <div className=\"col-6\">{card.back}</div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-9\"></div>\n                  <div className=\"col-3 text-right\">\n                    <Link\n                      to={`/decks/${deckId}/cards/${card.id}/edit`}\n                      className=\"btn btn-secondary\"\n                      style={{ marginRight: \"10px\" }}\n                    >\n                      <i\n                        className=\"oi oi-pencil\"\n                        style={{ paddingRight: \"5px\" }}\n                      ></i>\n                      Edit\n                    </Link>\n                    <button\n                      onClick={handleCardDelete}\n                      value={card.id}\n                      className=\"btn btn-danger\"\n                    >\n                      <i\n                        className=\"oi oi-trash\"\n                        style={{ paddingRight: \"5px\" }}\n                      ></i>\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <div>\n          <nav aria-label=\"breadcrumb\">\n            <ol className=\"breadcrumb\">\n              <li className=\"breadcrumb-item\" key=\"0\">\n                <Link to=\"/\">\n                  <i className=\"oi oi-home\" style={{ paddingRight: \"5px\" }}></i>\n                  Home\n                </Link>\n              </li>\n              <li\n                className=\"breadcrumb-item active\"\n                aria-current=\"page\"\n                key=\"1\"\n              >\n                {deck.name}\n              </li>\n            </ol>\n          </nav>\n          <h3>{deck.name}</h3>\n          <p>{deck.description}</p>\n          <div className=\"row justify-content-between\">\n            <div className=\"col-8\">\n              <Link\n                to={`/decks/${deckId}/edit`}\n                className=\"btn btn-secondary\"\n                style={{ marginRight: \"10px\" }}\n              >\n                <i className=\"oi oi-pencil\" style={{ paddingRight: \"5px\" }}></i>\n                Edit\n              </Link>\n              <Link\n                to={`/decks/${deckId}/study`}\n                className=\"btn btn-primary\"\n                style={{ marginRight: \"10px\" }}\n              >\n                <i className=\"oi oi-book\" style={{ paddingRight: \"5px\" }}></i>\n                Study\n              </Link>\n              <Link\n                to={`/decks/${deckId}/cards/new`}\n                className=\"btn btn-primary\"\n              >\n                <i className=\"oi oi-plus\" style={{ paddingRight: \"5px\" }}></i>\n                Add Cards\n              </Link>\n            </div>\n            <div className=\"col-2\">\n              <button onClick={handleDeckDelete} className=\"btn btn-danger\">\n                <i className=\"oi oi-trash\" style={{ paddingRight: \"5px\" }}></i>\n                Delete\n              </button>\n            </div>\n          </div>\n          <br />\n          <h2>No Cards, Please add some.</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Deck;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { readDeck, createCard } from \"../utils/api/index\";\nimport CardForm from \"./CardForm\";\n\nfunction CardCreate() {\n  const [deck, setDeck] = useState([]);\n  const params = useParams();\n  const deckId = params.deckId;\n\n  const initialFormState = {\n    front: \"\",\n    back: \"\",\n    deckId,\n  };\n\n  const handleChange = ({ target }) => {\n    const value = target.value;\n    setFormData({\n      ...formData,\n      [target.name]: value,\n    });\n  };\n\n  const [formData, setFormData] = useState({ ...initialFormState });\n\n  useEffect(() => {\n    async function loadData() {\n      try {\n        const response = await readDeck(deckId);\n        setDeck(response);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          // Ignore `AbortError`\n        } else {\n          throw error;\n        }\n      }\n    }\n    loadData();\n  }, [deckId]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // console.log(\"Submitted:\", formData);\n    async function updateData() {\n      try {\n        await createCard(deckId, formData);\n        setFormData(initialFormState);\n      } catch (error) {\n        if (error.name === \"AbortError\") {\n          // Ignore `AbortError`\n        } else {\n          throw error;\n        }\n      }\n    }\n    updateData();\n  };\n\n  if (deck) {\n    return (\n      <div>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <Link to=\"/\">\n                <i className=\"oi oi-home\" style={{ paddingRight: \"5px\" }}></i>\n                Home\n              </Link>\n            </li>\n            <li className=\"breadcrumb-item\">\n              <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Add Card\n            </li>\n          </ol>\n        </nav>\n        <br />\n        <h2>{deck.name}: Add Card</h2>\n        <form onSubmit={handleSubmit}>\n          <CardForm formData={formData} handleChange={handleChange} />\n          <Link\n            to={`/decks/${deckId}`}\n            className=\"btn btn-secondary\"\n            style={{ marginRight: \"10px\" }}\n          >\n            Done\n          </Link>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Save\n          </button>\n        </form>\n      </div>\n    );\n  } else {\n    return \"Loading...\";\n  }\n}\n\nexport default CardCreate;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport DeckCreate from \"./DeckCreate\";\nimport Study from \"./Study\";\nimport DeckEdit from \"./DeckEdit\";\nimport CardEdit from \"./CardEdit\";\nimport Deck from \"./Deck\";\nimport CardCreate from \"./CardCreate\";\nimport NotFound from \"./NotFound\";\n\nfunction Layout() {\n  return (\n    <>\n      <Header />\n      <div className=\"container\">\n        {/* TODO: Implement the screen starting here */}\n        <Switch>\n          <Route exact={true} path=\"/\">\n            <Home />\n          </Route>\n          <Route path={\"/decks/new\"}>\n            <DeckCreate />\n          </Route>\n          <Route path={\"/decks/:deckId/study\"}>\n            <Study />\n          </Route>\n          <Route path={\"/decks/:deckId/edit\"}>\n            <DeckEdit />\n          </Route>\n          <Route path={\"/decks/:deckId/cards/:cardId/edit\"}>\n            <CardEdit />\n          </Route>\n          <Route path={\"/decks/:deckId/cards/new\"}>\n            <CardCreate />\n          </Route>\n          <Route path={\"/decks/:deckId\"}>\n            <Deck />\n          </Route>\n          <Route>\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}